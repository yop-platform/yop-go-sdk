# Release workflow for YOP Go SDK
name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Validate tag format
        run: |
          if [[ ! "${{ steps.tag.outputs.tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format. Expected format: v1.2.3"
            exit 1
          fi

      - name: Run tests
        run: |
          go test -v ./...

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            echo "changelog=Initial release of YOP Go SDK" >> $GITHUB_OUTPUT
          else
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "### Changes since $PREV_TAG" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD | grep -v "Merge pull request" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: YOP Go SDK ${{ steps.tag.outputs.tag }}
          body: |
            ## YOP Go SDK ${{ steps.tag.outputs.tag }}

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ```bash
            go get github.com/yop-platform/yop-go-sdk@${{ steps.tag.outputs.tag }}
            ```

            ## Quick Start

            ```go
            import (
                "github.com/yop-platform/yop-go-sdk/yop/client"
                "github.com/yop-platform/yop-go-sdk/yop/constants"
                "github.com/yop-platform/yop-go-sdk/yop/request"
            )

            // Create request
            var priKey = request.IsvPriKey{Value: "your-private-key", CertType: request.RSA2048}
            var yopRequest = request.NewYopRequest(constants.GET_HTTP_METHOD, "/rest/v1.0/api/path")
            yopRequest.AppId = "your-app-id"
            yopRequest.IsvPriKey = priKey

            // Send request
            yopResp, err := client.DefaultClient.Request(yopRequest)
            if err != nil {
                // Handle error
            }
            ```

            ## Documentation

            - [ä¸­æ–‡æ–‡æ¡£](https://github.com/yop-platform/yop-go-sdk/blob/main/README_zh-CN.md)
            - [English Documentation](https://github.com/yop-platform/yop-go-sdk/blob/main/README.md)
            - [Go Reference](https://pkg.go.dev/github.com/yop-platform/yop-go-sdk@${{ steps.tag.outputs.tag }})
            - [Contributing Guide](https://github.com/yop-platform/yop-go-sdk/blob/main/CONTRIBUTING.md)

            ## Support

            - [Report Issues](https://github.com/yop-platform/yop-go-sdk/issues)
            - [Discussions](https://github.com/yop-platform/yop-go-sdk/discussions)

            ---

            **Full Changelog**: https://github.com/yop-platform/yop-go-sdk/compare/${{ steps.changelog.outputs.prev_tag }}...${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    if: success()
    steps:
      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Notify success
        run: |
          echo "âœ… Successfully released YOP Go SDK ${{ steps.tag.outputs.tag }}"
          echo "ðŸ“¦ Package: https://pkg.go.dev/github.com/yop-platform/yop-go-sdk@${{ steps.tag.outputs.tag }}"
          echo "ðŸ“‹ Release: https://github.com/yop-platform/yop-go-sdk/releases/tag/${{ steps.tag.outputs.tag }}"
